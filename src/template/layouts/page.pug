doctype html
html(lang=siteConf.language)
  - const sortedPages = pages.toSorted((a, b) => (a.conf.priority || 0) - (b.conf.priority || 0))
  head
    title #{(siteConf.title + " " + (pageConf.title || "")).trim()}
    meta(name="description" content=pageConf.description || siteConf.description || "")
    meta(name="keywords" content=[...(pageConf.keywords || []), ...(siteConf.keywords || [])].join(", "))
    meta(name="author" content=siteConf.author)
    meta(name="viewport" content="width=device-width, initial-scale=1.0")
    meta(http-equiv="Content-Security-Policy" content=csp)
    meta(name="robots" content=(siteConf.allowRobots ? "nofollow, noarchive, nositelinkssearchbox, notranslate" : "none"))
    | !{faviconHtml}
    style
      each fontKey in ["logo", "head", "subhead", "bodyNorm", "bodyEmph"]
        - const font = res.fonts[fontKey]
        | @font-face {
        |   font-family: '#{fontKey}';
        |   src: #{['woff2', 'woff'].map(fmt => `url('${font[`${fmt}Url`]}') format('${fmt}')`).join(", ")};
        |   font-display: block;
        | }
    style #{res.styles.main.inline}
    noscript 
      style #{res.styles.noscript.inline}
    script
      | const __siteConf__ = !{JSON.stringify(siteConf)};
  body
    #loading
      #loading-content !{res.icons.loading.inline}
    main#main(role="main" class=sortedPages.some(p => p.bodyHtml) && 'started-expanded')
      header#header
        a(href='/')
          h1#logo #{text("logo", siteConf.title.toLowerCase())}
      section#pages(class=sortedPages.some(p => p.bodyHtml) && 'expanded' data-title=siteConf.title data-keywords=JSON.stringify(siteConf.keywords) data-description=siteConf.description)
        ul
          each page, i in sortedPages
            - const delay = `${(i + 1) * 0.1}s`
            li.page(class=page.bodyHtml && 'expanded' style={ 'max-height': !page.bodyHtml && sortedPages.some(p => p.bodyHtml) ? '0px' : 'none' } data-body-url=page.bodyUrl  data-title=page.conf.title data-keywords=JSON.stringify(siteConf.keywords) data-description=page.conf.description data-url=page.conf.url)
              header.header(style={ 'animation-delay': delay })
                a.link(href=page.conf.url)
                  .bullet(style={ 'animation-delay': delay })
                    .stroke
                  h2.title #{text("head", page.conf.title)}
                  if page.conf.subtitle
                    h3.subtitle #{text("subhead", page.conf.subtitle)}
                  if page.conf.date
                    .date #{text("bodyNorm", new Date(page.conf.date).toLocaleDateString("it-IT", { year: 'numeric', month: 'long', day: 'numeric' }))}
              .body-holder(style={ 'max-height': page.bodyHtml ? 'none' : '0px' })
                if page.bodyHtml 
                  | !{page.bodyHtml}
      footer#footer
        #author #{text("logo", siteConf.author)}
  script(src=res.scripts.main.url)
  if devScript !== null
    script
      | !{devScript}